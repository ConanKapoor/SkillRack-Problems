ALGORITHM:-
STEP1 - Form a class Customer_Details with Name[20], Mobile_no[15] and Address[50] as char under protected access and a get function as void in public access to read Name, Mobile_no and Address of customer.
                class Customer_Details
                {
                    protected:
                        char Name[20];
                        char Mobile_no[15];
                        char Address[50];
                    public:
                        void get()
                        {
                            cin>>Name>>Mobile_no>>Address;
                        }
                };
STEP2 - Form a class customer inherited from Customer_Details in which initiate
Customer_Id[20] as char ad no_Of_Bills and Cost[30] as int under private access and form a get and calc_Total function under public access.
STEP3 - calc_Total function - 
                int calc_Total()
                {
                    int Total=0;
                    for(int i=0;i<no_Of_Bills;i++)
                    {
                        Total+=Cost[i];
                    }
                    return Total;
                }
STEP4 - Form a class preferred_Customer inherited from Customer_Details in which initiate Customer_Id[20] as char ad no_Of_Bills and Cost[30] as int under private access and form a get and calc_Total function under public access.
STEP5 - calc_Total function - 
                int calc_Total()
                {
                    float Total=0;
                    for(int i=0;i<no_Of_Bills;i++)
                    {
                        if(Cost[i]>=20000)
                            Total+=Cost[i]*(1-0.04*(i+1));
                        else if(Cost[i]>=15000)
                            Total+=Cost[i]*(1-0.03*(i+1));
                        else if(Cost[i]>=10000)
                            Total+=Cost[i]*(1-0.02*(i+1));
                        else if(Cost[i]>=5000)
                            Total+=Cost[i]*(1-0.01*(i+1));
                        else
                            Total+=Cost[i];
                    }
                    return (int)Total;
                }
